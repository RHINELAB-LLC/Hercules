-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bbgemm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    m1_ce0 : OUT STD_LOGIC;
    m1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    m2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    m2_ce0 : OUT STD_LOGIC;
    m2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    m2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    m2_ce1 : OUT STD_LOGIC;
    m2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    prod_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    prod_ce0 : OUT STD_LOGIC;
    prod_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    prod_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    prod_ce1 : OUT STD_LOGIC;
    prod_we1 : OUT STD_LOGIC;
    prod_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    signal_mul_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    signal_mul_ce0 : OUT STD_LOGIC;
    signal_mul_we0 : OUT STD_LOGIC;
    signal_mul_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    signal_temp_x_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    signal_temp_x_ce0 : OUT STD_LOGIC;
    signal_temp_x_we0 : OUT STD_LOGIC;
    signal_temp_x_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    signal_m2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    signal_m2_ce0 : OUT STD_LOGIC;
    signal_m2_we0 : OUT STD_LOGIC;
    signal_m2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of bbgemm is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "bbgemm_bbgemm,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.042000,HLS_SYN_LAT=262156,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2693,HLS_SYN_LUT=3100,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv14_1000 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten126_reg_488 : STD_LOGIC_VECTOR (15 downto 0);
    signal jj_reg_499 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten65_reg_510 : STD_LOGIC_VECTOR (13 downto 0);
    signal kk_reg_521 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten_reg_532 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_543 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_reg_554 : STD_LOGIC_VECTOR (3 downto 0);
    signal encore_num_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_584 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln24_reg_1440 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal reg_589 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal reg_595 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal icmp_ln24_reg_1440_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_599 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln24_fu_603_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln24_reg_1435 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln24_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_1440_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_1444 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln24_1_fu_661_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln24_1_reg_1449 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln25_3_fu_781_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln25_3_reg_1454 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln26_fu_807_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln26_reg_1459 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln26_1_fu_833_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln26_1_reg_1464 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln26_1_reg_1464_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln26_2_fu_841_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln26_2_reg_1476 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_fu_900_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln32_reg_1486 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln26_3_fu_928_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln26_3_reg_1506 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln25_1_fu_936_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln25_1_reg_1511 : STD_LOGIC_VECTOR (13 downto 0);
    signal m1_load_reg_1516 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_reg_1522 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln37_fu_960_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln37_reg_1527 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_x_fu_988_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_x_reg_1544 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln32_fu_992_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_1_fu_997_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_1_reg_1554 : STD_LOGIC_VECTOR (63 downto 0);
    signal m2_load_3_reg_1559 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln32_1_fu_1022_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln37_1_fu_1037_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln37_1_reg_1580 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln34_2_fu_1045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_2_reg_1586 : STD_LOGIC_VECTOR (63 downto 0);
    signal m2_load_5_reg_1591 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_reg_1607 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln32_2_fu_1075_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln37_2_fu_1090_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln37_2_reg_1618 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln34_3_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_3_reg_1624 : STD_LOGIC_VECTOR (63 downto 0);
    signal m2_load_7_reg_1629 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_1_reg_1635 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln32_3_fu_1114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln37_3_fu_1128_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln37_3_reg_1646 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln34_4_fu_1136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_4_reg_1652 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_580_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_reg_1657 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_2_reg_1663 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln32_4_fu_1152_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln37_4_fu_1167_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln37_4_reg_1674 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln34_5_fu_1175_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_5_reg_1680 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_fu_1195_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_1_reg_1690 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_3_reg_1696 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln32_5_fu_1200_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln37_5_fu_1214_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln37_5_reg_1707 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln34_6_fu_1222_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_6_reg_1713 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln27_fu_1228_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln27_reg_1718 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln25_4_fu_1233_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln25_4_reg_1723 : STD_LOGIC_VECTOR (13 downto 0);
    signal bitcast_ln45_8_fu_1253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_2_reg_1733 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_4_reg_1739 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln32_6_fu_1258_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_7_fu_1281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_7_reg_1750 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln37_7_fu_1299_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln37_7_reg_1755 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln45_2_fu_1321_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_3_reg_1765 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_5_reg_1771 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln32_7_fu_1326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_3_fu_1344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_4_reg_1787 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_6_reg_1793 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln45_4_fu_1368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_5_reg_1804 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_7_reg_1810 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln45_5_fu_1382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_6_reg_1821 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_6_fu_1396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_7_reg_1832 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_7_fu_1410_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_phi_mux_indvar_flatten126_phi_fu_492_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_jj_phi_fu_503_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_indvar_flatten65_phi_fu_514_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_mux_kk_phi_fu_525_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_536_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_i_phi_fu_547_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_k_phi_fu_558_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_encore_num_phi_fu_569_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln30_fu_895_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln32_fu_906_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln32_1_fu_917_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln32_2_fu_973_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln32_3_fu_983_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln32_4_fu_1007_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln32_5_fu_1017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln32_6_fu_1056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln32_7_fu_1066_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln26_7_fu_1071_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln26_fu_1109_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln26_1_fu_1147_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln26_2_fu_1186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln26_3_fu_1244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln26_4_fu_1312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln26_5_fu_1335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln26_6_fu_1354_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_1_fu_1359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_9_fu_1373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_10_fu_1387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_11_fu_1401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_12_fu_1415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_13_fu_1420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_14_fu_1425_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_15_fu_1430_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln34_fu_1191_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln34_1_fu_1249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln34_2_fu_1317_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln34_3_fu_1340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln34_4_fu_1364_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln34_5_fu_1378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln34_6_fu_1392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln34_7_fu_1406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_576_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_576_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_580_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_613_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_617_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln24_fu_609_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln24_1_fu_651_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln25_fu_673_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln24_1_fu_657_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln45_fu_625_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln27_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln24_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln24_fu_643_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln24_1_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln25_fu_723_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln25_1_fu_743_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln24_2_fu_677_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln25_fu_669_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln24_3_fu_685_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal xor_ln25_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln24_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_1_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_fu_735_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln25_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_8_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln26_fu_789_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_8_fu_815_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid1_fu_819_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln45_1_fu_827_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln25_2_fu_755_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_857_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln29_fu_853_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln25_1_fu_747_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_cast6_fu_849_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln30_fu_883_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln30_fu_877_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln30_1_fu_887_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln_fu_867_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln32_fu_911_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln26_1_fu_922_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln37_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln38_fu_954_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln32_1_fu_968_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln32_2_fu_978_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln32_3_fu_1002_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln32_4_fu_1012_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln37_1_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln38_1_fu_1032_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln32_5_fu_1051_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln32_6_fu_1061_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln37_2_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln38_2_fu_1085_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln26_1_fu_1104_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln37_3_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln38_3_fu_1123_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln26_2_fu_1142_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln37_4_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln38_4_fu_1162_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln26_3_fu_1181_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln37_5_fu_1204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln38_5_fu_1209_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln26_4_fu_1239_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln37_6_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln38_6_fu_1268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln37_6_fu_1273_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln37_7_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln38_7_fu_1293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln26_5_fu_1307_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln26_6_fu_1330_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln26_7_fu_1349_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_576_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component bbgemm_dadd_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component bbgemm_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    dadd_64ns_64ns_64_5_full_dsp_1_U1 : component bbgemm_dadd_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_576_p0,
        din1 => grp_fu_576_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_576_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U2 : component bbgemm_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_580_p0,
        din1 => grp_fu_580_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_580_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    encore_num_reg_565_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                encore_num_reg_565 <= select_ln37_7_reg_1755;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                encore_num_reg_565 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_543 <= select_ln26_2_reg_1476;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_543 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    indvar_flatten126_reg_488_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten126_reg_488 <= add_ln24_reg_1435;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten126_reg_488 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten65_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten65_reg_510 <= select_ln25_4_reg_1723;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten65_reg_510 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_532 <= select_ln26_3_reg_1506;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_532 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    jj_reg_499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                jj_reg_499 <= select_ln24_1_reg_1449;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                jj_reg_499 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    k_reg_554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                k_reg_554 <= add_ln27_reg_1718;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                k_reg_554 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    kk_reg_521_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                kk_reg_521 <= select_ln25_3_reg_1454;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                kk_reg_521 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    reg_589_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0))) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
                    reg_589 <= m2_q1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                    reg_589 <= m2_q0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln24_reg_1435 <= add_ln24_fu_603_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_fu_631_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln25_1_reg_1511 <= add_ln25_1_fu_936_p2;
                add_ln32_reg_1486 <= add_ln32_fu_900_p2;
                icmp_ln25_reg_1444 <= icmp_ln25_fu_637_p2;
                select_ln26_1_reg_1464 <= select_ln26_1_fu_833_p3;
                select_ln26_reg_1459 <= select_ln26_fu_807_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                add_ln27_reg_1718 <= add_ln27_fu_1228_p2;
                mul_1_reg_1690 <= grp_fu_580_p2;
                select_ln25_4_reg_1723 <= select_ln25_4_fu_1233_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln24_reg_1440 <= icmp_ln24_fu_631_p2;
                icmp_ln24_reg_1440_pp0_iter1_reg <= icmp_ln24_reg_1440;
                icmp_ln24_reg_1440_pp0_iter2_reg <= icmp_ln24_reg_1440_pp0_iter1_reg;
                select_ln26_1_reg_1464_pp0_iter1_reg <= select_ln26_1_reg_1464;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                m1_load_reg_1516 <= m1_q0;
                select_ln37_reg_1527 <= select_ln37_fu_960_p3;
                    zext_ln34_reg_1522(31 downto 0) <= zext_ln34_fu_942_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                m2_load_3_reg_1559 <= m2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                m2_load_5_reg_1591 <= m2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                m2_load_7_reg_1629 <= m2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_2_reg_1733 <= grp_fu_580_p2;
                select_ln37_7_reg_1755 <= select_ln37_7_fu_1299_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul_3_reg_1765 <= grp_fu_580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul_4_reg_1787 <= grp_fu_580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul_5_reg_1804 <= grp_fu_580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                mul_6_reg_1821 <= grp_fu_580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                mul_7_reg_1832 <= grp_fu_580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                mul_reg_1657 <= grp_fu_580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                    prod_addr_1_reg_1635(11 downto 1) <= zext_ln26_fu_1109_p1(12 - 1 downto 0)(11 downto 1);
                select_ln37_3_reg_1646 <= select_ln37_3_fu_1128_p3;
                    zext_ln34_4_reg_1652(31 downto 0) <= zext_ln34_4_fu_1136_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                    prod_addr_2_reg_1663(0) <= zext_ln26_1_fu_1147_p1(12 - 1 downto 0)(0);    prod_addr_2_reg_1663(11 downto 2) <= zext_ln26_1_fu_1147_p1(12 - 1 downto 0)(11 downto 2);
                select_ln37_4_reg_1674 <= select_ln37_4_fu_1167_p3;
                    zext_ln34_5_reg_1680(31 downto 0) <= zext_ln34_5_fu_1175_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                    prod_addr_3_reg_1696(11 downto 2) <= zext_ln26_2_fu_1186_p1(12 - 1 downto 0)(11 downto 2);
                select_ln37_5_reg_1707 <= select_ln37_5_fu_1214_p3;
                    zext_ln34_6_reg_1713(31 downto 0) <= zext_ln34_6_fu_1222_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    prod_addr_4_reg_1739(1 downto 0) <= zext_ln26_3_fu_1244_p1(12 - 1 downto 0)(1 downto 0);    prod_addr_4_reg_1739(11 downto 3) <= zext_ln26_3_fu_1244_p1(12 - 1 downto 0)(11 downto 3);
                    zext_ln34_7_reg_1750(31 downto 0) <= zext_ln34_7_fu_1281_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    prod_addr_5_reg_1771(1) <= zext_ln26_4_fu_1312_p1(12 - 1 downto 0)(1);    prod_addr_5_reg_1771(11 downto 3) <= zext_ln26_4_fu_1312_p1(12 - 1 downto 0)(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                    prod_addr_6_reg_1793(0) <= zext_ln26_5_fu_1335_p1(12 - 1 downto 0)(0);    prod_addr_6_reg_1793(11 downto 3) <= zext_ln26_5_fu_1335_p1(12 - 1 downto 0)(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                    prod_addr_7_reg_1810(11 downto 3) <= zext_ln26_6_fu_1354_p1(12 - 1 downto 0)(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                prod_addr_reg_1607 <= zext_ln26_7_fu_1071_p1(12 - 1 downto 0);
                select_ln37_2_reg_1618 <= select_ln37_2_fu_1090_p3;
                    zext_ln34_3_reg_1624(31 downto 0) <= zext_ln34_3_fu_1098_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_584 <= m2_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then
                reg_595 <= prod_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_599 <= prod_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln24_fu_631_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln24_1_reg_1449 <= select_ln24_1_fu_661_p3;
                select_ln25_3_reg_1454 <= select_ln25_3_fu_781_p3;
                select_ln26_2_reg_1476 <= select_ln26_2_fu_841_p3;
                select_ln26_3_reg_1506 <= select_ln26_3_fu_928_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                select_ln37_1_reg_1580 <= select_ln37_1_fu_1037_p3;
                    zext_ln34_2_reg_1586(31 downto 0) <= zext_ln34_2_fu_1045_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                temp_x_reg_1544 <= temp_x_fu_988_p1;
                    zext_ln34_1_reg_1554(31 downto 0) <= zext_ln34_1_fu_997_p1(31 downto 0);
            end if;
        end if;
    end process;
    zext_ln34_reg_1522(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln34_1_reg_1554(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln34_2_reg_1586(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln34_3_reg_1624(63 downto 32) <= "00000000000000000000000000000000";
    prod_addr_1_reg_1635(0) <= '1';
    zext_ln34_4_reg_1652(63 downto 32) <= "00000000000000000000000000000000";
    prod_addr_2_reg_1663(1) <= '1';
    zext_ln34_5_reg_1680(63 downto 32) <= "00000000000000000000000000000000";
    prod_addr_3_reg_1696(1 downto 0) <= "11";
    zext_ln34_6_reg_1713(63 downto 32) <= "00000000000000000000000000000000";
    prod_addr_4_reg_1739(2) <= '1';
    zext_ln34_7_reg_1750(63 downto 32) <= "00000000000000000000000000000000";
    prod_addr_5_reg_1771(0) <= '1';
    prod_addr_5_reg_1771(2) <= '1';
    prod_addr_6_reg_1793(2 downto 1) <= "11";
    prod_addr_7_reg_1810(2 downto 0) <= "111";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln24_reg_1440, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage2_subdone, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln24_reg_1440 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln24_reg_1440 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln24_1_fu_651_p2 <= std_logic_vector(unsigned(ap_phi_mux_jj_phi_fu_503_p4) + unsigned(ap_const_lv7_8));
    add_ln24_fu_603_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten126_phi_fu_492_p4) + unsigned(ap_const_lv16_1));
    add_ln25_1_fu_936_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten65_phi_fu_514_p4) + unsigned(ap_const_lv14_1));
    add_ln25_fu_723_p2 <= std_logic_vector(unsigned(select_ln24_fu_643_p3) + unsigned(ap_const_lv7_8));
    add_ln26_1_fu_922_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_536_p4) + unsigned(ap_const_lv11_1));
    add_ln26_fu_789_p2 <= std_logic_vector(unsigned(select_ln25_fu_735_p3) + unsigned(ap_const_lv7_1));
    add_ln27_fu_1228_p2 <= std_logic_vector(unsigned(select_ln26_reg_1459) + unsigned(ap_const_lv4_1));
    add_ln30_1_fu_887_p3 <= (trunc_ln30_fu_883_p1 & add_ln30_fu_877_p2);
    add_ln30_fu_877_p2 <= std_logic_vector(unsigned(select_ln25_1_fu_747_p3) + unsigned(k_cast6_fu_849_p1));
    add_ln32_fu_900_p2 <= std_logic_vector(unsigned(shl_ln_fu_867_p4) + unsigned(zext_ln25_fu_669_p1));
    add_ln38_1_fu_1032_p2 <= std_logic_vector(unsigned(select_ln37_reg_1527) + unsigned(ap_const_lv32_1));
    add_ln38_2_fu_1085_p2 <= std_logic_vector(unsigned(select_ln37_1_reg_1580) + unsigned(ap_const_lv32_1));
    add_ln38_3_fu_1123_p2 <= std_logic_vector(unsigned(select_ln37_2_reg_1618) + unsigned(ap_const_lv32_1));
    add_ln38_4_fu_1162_p2 <= std_logic_vector(unsigned(select_ln37_3_reg_1646) + unsigned(ap_const_lv32_1));
    add_ln38_5_fu_1209_p2 <= std_logic_vector(unsigned(select_ln37_4_reg_1674) + unsigned(ap_const_lv32_1));
    add_ln38_6_fu_1268_p2 <= std_logic_vector(unsigned(select_ln37_5_reg_1707) + unsigned(ap_const_lv32_1));
    add_ln38_7_fu_1293_p2 <= std_logic_vector(unsigned(select_ln37_6_fu_1273_p3) + unsigned(ap_const_lv32_1));
    add_ln38_fu_954_p2 <= std_logic_vector(unsigned(ap_phi_mux_encore_num_phi_fu_569_p4) + unsigned(ap_const_lv32_1));
    add_ln45_1_fu_827_p2 <= std_logic_vector(unsigned(p_mid1_fu_819_p3) + unsigned(zext_ln25_fu_669_p1));
    add_ln45_fu_625_p2 <= std_logic_vector(unsigned(tmp_3_fu_617_p3) + unsigned(zext_ln24_fu_609_p1));
    and_ln24_1_fu_717_p2 <= (xor_ln24_fu_693_p2 and icmp_ln26_fu_711_p2);
    and_ln24_fu_705_p2 <= (xor_ln24_fu_693_p2 and icmp_ln27_fu_699_p2);
    and_ln25_fu_775_p2 <= (or_ln25_1_fu_769_p2 and and_ln24_fu_705_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state21 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln24_reg_1440)
    begin
        if ((icmp_ln24_reg_1440 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_encore_num_phi_fu_569_p4_assign_proc : process(encore_num_reg_565, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln24_reg_1440_pp0_iter1_reg, select_ln37_7_reg_1755, ap_block_pp0_stage1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_phi_mux_encore_num_phi_fu_569_p4 <= select_ln37_7_reg_1755;
        else 
            ap_phi_mux_encore_num_phi_fu_569_p4 <= encore_num_reg_565;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_547_p4_assign_proc : process(i_reg_543, icmp_ln24_reg_1440, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, select_ln26_2_reg_1476, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_547_p4 <= select_ln26_2_reg_1476;
        else 
            ap_phi_mux_i_phi_fu_547_p4 <= i_reg_543;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten126_phi_fu_492_p4_assign_proc : process(indvar_flatten126_reg_488, icmp_ln24_reg_1440, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, add_ln24_reg_1435, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten126_phi_fu_492_p4 <= add_ln24_reg_1435;
        else 
            ap_phi_mux_indvar_flatten126_phi_fu_492_p4 <= indvar_flatten126_reg_488;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten65_phi_fu_514_p4_assign_proc : process(indvar_flatten65_reg_510, icmp_ln24_reg_1440, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, select_ln25_4_reg_1723, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten65_phi_fu_514_p4 <= select_ln25_4_reg_1723;
        else 
            ap_phi_mux_indvar_flatten65_phi_fu_514_p4 <= indvar_flatten65_reg_510;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_536_p4_assign_proc : process(indvar_flatten_reg_532, icmp_ln24_reg_1440, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, select_ln26_3_reg_1506, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_536_p4 <= select_ln26_3_reg_1506;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_536_p4 <= indvar_flatten_reg_532;
        end if; 
    end process;


    ap_phi_mux_jj_phi_fu_503_p4_assign_proc : process(jj_reg_499, icmp_ln24_reg_1440, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, select_ln24_1_reg_1449, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_jj_phi_fu_503_p4 <= select_ln24_1_reg_1449;
        else 
            ap_phi_mux_jj_phi_fu_503_p4 <= jj_reg_499;
        end if; 
    end process;


    ap_phi_mux_k_phi_fu_558_p4_assign_proc : process(k_reg_554, icmp_ln24_reg_1440, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, add_ln27_reg_1718, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_k_phi_fu_558_p4 <= add_ln27_reg_1718;
        else 
            ap_phi_mux_k_phi_fu_558_p4 <= k_reg_554;
        end if; 
    end process;


    ap_phi_mux_kk_phi_fu_525_p4_assign_proc : process(kk_reg_521, icmp_ln24_reg_1440, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, select_ln25_3_reg_1454, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_kk_phi_fu_525_p4 <= select_ln25_3_reg_1454;
        else 
            ap_phi_mux_kk_phi_fu_525_p4 <= kk_reg_521;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln32_1_fu_1022_p1 <= reg_589;
    bitcast_ln32_2_fu_1075_p1 <= reg_584;
    bitcast_ln32_3_fu_1114_p1 <= m2_load_3_reg_1559;
    bitcast_ln32_4_fu_1152_p1 <= reg_589;
    bitcast_ln32_5_fu_1200_p1 <= m2_load_5_reg_1591;
    bitcast_ln32_6_fu_1258_p1 <= reg_584;
    bitcast_ln32_7_fu_1326_p1 <= m2_load_7_reg_1629;
    bitcast_ln32_fu_992_p1 <= reg_584;
    bitcast_ln34_1_fu_1249_p1 <= mul_1_reg_1690;
    bitcast_ln34_2_fu_1317_p1 <= mul_2_reg_1733;
    bitcast_ln34_3_fu_1340_p1 <= mul_3_reg_1765;
    bitcast_ln34_4_fu_1364_p1 <= mul_4_reg_1787;
    bitcast_ln34_5_fu_1378_p1 <= mul_5_reg_1804;
    bitcast_ln34_6_fu_1392_p1 <= mul_6_reg_1821;
    bitcast_ln34_7_fu_1406_p1 <= mul_7_reg_1832;
    bitcast_ln34_fu_1191_p1 <= mul_reg_1657;
    bitcast_ln45_10_fu_1387_p1 <= grp_fu_576_p2;
    bitcast_ln45_11_fu_1401_p1 <= grp_fu_576_p2;
    bitcast_ln45_12_fu_1415_p1 <= grp_fu_576_p2;
    bitcast_ln45_13_fu_1420_p1 <= grp_fu_576_p2;
    bitcast_ln45_14_fu_1425_p1 <= grp_fu_576_p2;
    bitcast_ln45_15_fu_1430_p1 <= grp_fu_576_p2;
    bitcast_ln45_1_fu_1359_p1 <= grp_fu_576_p2;
    bitcast_ln45_2_fu_1321_p1 <= reg_595;
    bitcast_ln45_3_fu_1344_p1 <= reg_599;
    bitcast_ln45_4_fu_1368_p1 <= reg_595;
    bitcast_ln45_5_fu_1382_p1 <= reg_599;
    bitcast_ln45_6_fu_1396_p1 <= reg_595;
    bitcast_ln45_7_fu_1410_p1 <= reg_599;
    bitcast_ln45_8_fu_1253_p1 <= reg_599;
    bitcast_ln45_9_fu_1373_p1 <= grp_fu_576_p2;
    bitcast_ln45_fu_1195_p1 <= reg_595;
    empty_8_fu_815_p1 <= add_ln26_fu_789_p2(6 - 1 downto 0);
    empty_fu_613_p1 <= ap_phi_mux_i_phi_fu_547_p4(6 - 1 downto 0);

    grp_fu_576_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, bitcast_ln45_fu_1195_p1, bitcast_ln45_8_fu_1253_p1, bitcast_ln45_2_fu_1321_p1, bitcast_ln45_3_fu_1344_p1, bitcast_ln45_4_fu_1368_p1, bitcast_ln45_5_fu_1382_p1, bitcast_ln45_6_fu_1396_p1, bitcast_ln45_7_fu_1410_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_576_p0 <= bitcast_ln45_7_fu_1410_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_576_p0 <= bitcast_ln45_6_fu_1396_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_576_p0 <= bitcast_ln45_5_fu_1382_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_576_p0 <= bitcast_ln45_4_fu_1368_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_576_p0 <= bitcast_ln45_3_fu_1344_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_576_p0 <= bitcast_ln45_2_fu_1321_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_576_p0 <= bitcast_ln45_8_fu_1253_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_576_p0 <= bitcast_ln45_fu_1195_p1;
        else 
            grp_fu_576_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_576_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, mul_reg_1657, mul_1_reg_1690, mul_2_reg_1733, mul_3_reg_1765, mul_4_reg_1787, mul_5_reg_1804, mul_6_reg_1821, mul_7_reg_1832, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_576_p1 <= mul_7_reg_1832;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_576_p1 <= mul_6_reg_1821;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_576_p1 <= mul_5_reg_1804;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_576_p1 <= mul_4_reg_1787;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_576_p1 <= mul_3_reg_1765;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_576_p1 <= mul_2_reg_1733;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_576_p1 <= mul_1_reg_1690;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_576_p1 <= mul_reg_1657;
        else 
            grp_fu_576_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_580_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, temp_x_fu_988_p1, temp_x_reg_1544, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            grp_fu_580_p0 <= temp_x_reg_1544;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_580_p0 <= temp_x_fu_988_p1;
        else 
            grp_fu_580_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_580_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, bitcast_ln32_fu_992_p1, bitcast_ln32_1_fu_1022_p1, bitcast_ln32_2_fu_1075_p1, bitcast_ln32_3_fu_1114_p1, bitcast_ln32_4_fu_1152_p1, bitcast_ln32_5_fu_1200_p1, bitcast_ln32_6_fu_1258_p1, bitcast_ln32_7_fu_1326_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_580_p1 <= bitcast_ln32_7_fu_1326_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_580_p1 <= bitcast_ln32_6_fu_1258_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_580_p1 <= bitcast_ln32_5_fu_1200_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_580_p1 <= bitcast_ln32_4_fu_1152_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_580_p1 <= bitcast_ln32_3_fu_1114_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_580_p1 <= bitcast_ln32_2_fu_1075_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_580_p1 <= bitcast_ln32_1_fu_1022_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_580_p1 <= bitcast_ln32_fu_992_p1;
        else 
            grp_fu_580_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln24_fu_631_p2 <= "1" when (ap_phi_mux_indvar_flatten126_phi_fu_492_p4 = ap_const_lv16_8000) else "0";
    icmp_ln25_fu_637_p2 <= "1" when (ap_phi_mux_indvar_flatten65_phi_fu_514_p4 = ap_const_lv14_1000) else "0";
    icmp_ln26_fu_711_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_536_p4 = ap_const_lv11_200) else "0";
    icmp_ln27_fu_699_p2 <= "1" when (ap_phi_mux_k_phi_fu_558_p4 = ap_const_lv4_8) else "0";
    icmp_ln37_1_fu_1027_p2 <= "1" when (signed(select_ln37_reg_1527) < signed(ap_const_lv32_3F)) else "0";
    icmp_ln37_2_fu_1080_p2 <= "1" when (signed(select_ln37_1_reg_1580) < signed(ap_const_lv32_3F)) else "0";
    icmp_ln37_3_fu_1118_p2 <= "1" when (signed(select_ln37_2_reg_1618) < signed(ap_const_lv32_3F)) else "0";
    icmp_ln37_4_fu_1157_p2 <= "1" when (signed(select_ln37_3_reg_1646) < signed(ap_const_lv32_3F)) else "0";
    icmp_ln37_5_fu_1204_p2 <= "1" when (signed(select_ln37_4_reg_1674) < signed(ap_const_lv32_3F)) else "0";
    icmp_ln37_6_fu_1263_p2 <= "1" when (signed(select_ln37_5_reg_1707) < signed(ap_const_lv32_3F)) else "0";
    icmp_ln37_7_fu_1287_p2 <= "1" when (signed(select_ln37_6_fu_1273_p3) < signed(ap_const_lv32_3F)) else "0";
    icmp_ln37_fu_948_p2 <= "1" when (signed(ap_phi_mux_encore_num_phi_fu_569_p4) < signed(ap_const_lv32_3F)) else "0";
    k_cast6_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln26_fu_807_p3),6));
    m1_address0 <= zext_ln30_fu_895_p1(12 - 1 downto 0);

    m1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m1_ce0 <= ap_const_logic_1;
        else 
            m1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    m2_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln32_1_fu_917_p1, zext_ln32_3_fu_983_p1, ap_block_pp0_stage2, zext_ln32_5_fu_1017_p1, ap_block_pp0_stage3, zext_ln32_7_fu_1066_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                m2_address0 <= zext_ln32_7_fu_1066_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                m2_address0 <= zext_ln32_5_fu_1017_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                m2_address0 <= zext_ln32_3_fu_983_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                m2_address0 <= zext_ln32_1_fu_917_p1(12 - 1 downto 0);
            else 
                m2_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            m2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    m2_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln32_fu_906_p1, zext_ln32_2_fu_973_p1, ap_block_pp0_stage2, zext_ln32_4_fu_1007_p1, ap_block_pp0_stage3, zext_ln32_6_fu_1056_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                m2_address1 <= zext_ln32_6_fu_1056_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                m2_address1 <= zext_ln32_4_fu_1007_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                m2_address1 <= zext_ln32_2_fu_973_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                m2_address1 <= zext_ln32_fu_906_p1(12 - 1 downto 0);
            else 
                m2_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            m2_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    m2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            m2_ce0 <= ap_const_logic_1;
        else 
            m2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    m2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            m2_ce1 <= ap_const_logic_1;
        else 
            m2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln25_1_fu_769_p2 <= (xor_ln25_fu_763_p2 or icmp_ln25_fu_637_p2);
    or_ln25_fu_729_p2 <= (icmp_ln25_fu_637_p2 or and_ln24_1_fu_717_p2);
    or_ln26_1_fu_1104_p2 <= (select_ln26_1_reg_1464 or ap_const_lv12_1);
    or_ln26_2_fu_1142_p2 <= (select_ln26_1_reg_1464 or ap_const_lv12_2);
    or_ln26_3_fu_1181_p2 <= (select_ln26_1_reg_1464 or ap_const_lv12_3);
    or_ln26_4_fu_1239_p2 <= (select_ln26_1_reg_1464 or ap_const_lv12_4);
    or_ln26_5_fu_1307_p2 <= (select_ln26_1_reg_1464_pp0_iter1_reg or ap_const_lv12_5);
    or_ln26_6_fu_1330_p2 <= (select_ln26_1_reg_1464_pp0_iter1_reg or ap_const_lv12_6);
    or_ln26_7_fu_1349_p2 <= (select_ln26_1_reg_1464_pp0_iter1_reg or ap_const_lv12_7);
    or_ln26_8_fu_801_p2 <= (or_ln26_fu_795_p2 or icmp_ln25_fu_637_p2);
    or_ln26_fu_795_p2 <= (and_ln25_fu_775_p2 or and_ln24_1_fu_717_p2);
    or_ln32_1_fu_968_p2 <= (ap_const_lv12_2 or add_ln32_reg_1486);
    or_ln32_2_fu_978_p2 <= (ap_const_lv12_3 or add_ln32_reg_1486);
    or_ln32_3_fu_1002_p2 <= (ap_const_lv12_4 or add_ln32_reg_1486);
    or_ln32_4_fu_1012_p2 <= (ap_const_lv12_5 or add_ln32_reg_1486);
    or_ln32_5_fu_1051_p2 <= (ap_const_lv12_6 or add_ln32_reg_1486);
    or_ln32_6_fu_1061_p2 <= (ap_const_lv12_7 or add_ln32_reg_1486);
    or_ln32_fu_911_p2 <= (ap_const_lv12_1 or add_ln32_fu_900_p2);
    p_mid1_fu_819_p3 <= (empty_8_fu_815_p1 & ap_const_lv6_0);

    prod_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln26_7_fu_1071_p1, ap_block_pp0_stage4, zext_ln26_fu_1109_p1, ap_block_pp0_stage5, zext_ln26_1_fu_1147_p1, ap_block_pp0_stage6, ap_block_pp0_stage7, zext_ln26_2_fu_1186_p1, zext_ln26_3_fu_1244_p1, zext_ln26_4_fu_1312_p1, zext_ln26_5_fu_1335_p1, zext_ln26_6_fu_1354_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            prod_address0 <= zext_ln26_6_fu_1354_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            prod_address0 <= zext_ln26_5_fu_1335_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            prod_address0 <= zext_ln26_4_fu_1312_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            prod_address0 <= zext_ln26_3_fu_1244_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            prod_address0 <= zext_ln26_2_fu_1186_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            prod_address0 <= zext_ln26_1_fu_1147_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            prod_address0 <= zext_ln26_fu_1109_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            prod_address0 <= zext_ln26_7_fu_1071_p1(12 - 1 downto 0);
        else 
            prod_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    prod_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, prod_addr_reg_1607, prod_addr_1_reg_1635, prod_addr_2_reg_1663, prod_addr_3_reg_1696, prod_addr_4_reg_1739, prod_addr_5_reg_1771, prod_addr_6_reg_1793, prod_addr_7_reg_1810, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            prod_address1 <= prod_addr_7_reg_1810;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            prod_address1 <= prod_addr_6_reg_1793;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            prod_address1 <= prod_addr_5_reg_1771;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            prod_address1 <= prod_addr_4_reg_1739;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            prod_address1 <= prod_addr_3_reg_1696;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            prod_address1 <= prod_addr_2_reg_1663;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            prod_address1 <= prod_addr_1_reg_1635;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            prod_address1 <= prod_addr_reg_1607;
        else 
            prod_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    prod_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            prod_ce0 <= ap_const_logic_1;
        else 
            prod_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    prod_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then 
            prod_ce1 <= ap_const_logic_1;
        else 
            prod_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    prod_d1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, bitcast_ln45_1_fu_1359_p1, bitcast_ln45_9_fu_1373_p1, bitcast_ln45_10_fu_1387_p1, bitcast_ln45_11_fu_1401_p1, bitcast_ln45_12_fu_1415_p1, bitcast_ln45_13_fu_1420_p1, bitcast_ln45_14_fu_1425_p1, bitcast_ln45_15_fu_1430_p1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            prod_d1 <= bitcast_ln45_15_fu_1430_p1;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            prod_d1 <= bitcast_ln45_14_fu_1425_p1;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            prod_d1 <= bitcast_ln45_13_fu_1420_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            prod_d1 <= bitcast_ln45_12_fu_1415_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            prod_d1 <= bitcast_ln45_11_fu_1401_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            prod_d1 <= bitcast_ln45_10_fu_1387_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            prod_d1 <= bitcast_ln45_9_fu_1373_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            prod_d1 <= bitcast_ln45_1_fu_1359_p1;
        else 
            prod_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    prod_we1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, icmp_ln24_reg_1440_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln24_reg_1440_pp0_iter2_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln24_reg_1440_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln24_reg_1440_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then 
            prod_we1 <= ap_const_logic_1;
        else 
            prod_we1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln24_1_fu_661_p3 <= 
        add_ln24_1_fu_651_p2 when (icmp_ln25_fu_637_p2(0) = '1') else 
        ap_phi_mux_jj_phi_fu_503_p4;
    select_ln24_2_fu_677_p3 <= 
        ap_const_lv6_0 when (icmp_ln25_fu_637_p2(0) = '1') else 
        trunc_ln25_fu_673_p1;
    select_ln24_3_fu_685_p3 <= 
        zext_ln24_1_fu_657_p1 when (icmp_ln25_fu_637_p2(0) = '1') else 
        add_ln45_fu_625_p2;
    select_ln24_fu_643_p3 <= 
        ap_const_lv7_0 when (icmp_ln25_fu_637_p2(0) = '1') else 
        ap_phi_mux_kk_phi_fu_525_p4;
    select_ln25_1_fu_747_p3 <= 
        trunc_ln25_1_fu_743_p1 when (and_ln24_1_fu_717_p2(0) = '1') else 
        select_ln24_2_fu_677_p3;
    select_ln25_2_fu_755_p3 <= 
        zext_ln25_fu_669_p1 when (and_ln24_1_fu_717_p2(0) = '1') else 
        select_ln24_3_fu_685_p3;
    select_ln25_3_fu_781_p3 <= 
        add_ln25_fu_723_p2 when (and_ln24_1_fu_717_p2(0) = '1') else 
        select_ln24_fu_643_p3;
    select_ln25_4_fu_1233_p3 <= 
        ap_const_lv14_1 when (icmp_ln25_reg_1444(0) = '1') else 
        add_ln25_1_reg_1511;
    select_ln25_fu_735_p3 <= 
        ap_const_lv7_0 when (or_ln25_fu_729_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_547_p4;
    select_ln26_1_fu_833_p3 <= 
        add_ln45_1_fu_827_p2 when (and_ln25_fu_775_p2(0) = '1') else 
        select_ln25_2_fu_755_p3;
    select_ln26_2_fu_841_p3 <= 
        add_ln26_fu_789_p2 when (and_ln25_fu_775_p2(0) = '1') else 
        select_ln25_fu_735_p3;
    select_ln26_3_fu_928_p3 <= 
        ap_const_lv11_1 when (or_ln25_fu_729_p2(0) = '1') else 
        add_ln26_1_fu_922_p2;
    select_ln26_fu_807_p3 <= 
        ap_const_lv4_0 when (or_ln26_8_fu_801_p2(0) = '1') else 
        ap_phi_mux_k_phi_fu_558_p4;
    select_ln37_1_fu_1037_p3 <= 
        add_ln38_1_fu_1032_p2 when (icmp_ln37_1_fu_1027_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln37_2_fu_1090_p3 <= 
        add_ln38_2_fu_1085_p2 when (icmp_ln37_2_fu_1080_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln37_3_fu_1128_p3 <= 
        add_ln38_3_fu_1123_p2 when (icmp_ln37_3_fu_1118_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln37_4_fu_1167_p3 <= 
        add_ln38_4_fu_1162_p2 when (icmp_ln37_4_fu_1157_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln37_5_fu_1214_p3 <= 
        add_ln38_5_fu_1209_p2 when (icmp_ln37_5_fu_1204_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln37_6_fu_1273_p3 <= 
        add_ln38_6_fu_1268_p2 when (icmp_ln37_6_fu_1263_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln37_7_fu_1299_p3 <= 
        add_ln38_7_fu_1293_p2 when (icmp_ln37_7_fu_1287_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln37_fu_960_p3 <= 
        add_ln38_fu_954_p2 when (icmp_ln37_fu_948_p2(0) = '1') else 
        ap_const_lv32_0;
    shl_ln_fu_867_p4 <= ((tmp_1_fu_857_p4 & trunc_ln29_fu_853_p1) & ap_const_lv6_0);

    signal_m2_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, zext_ln34_fu_942_p1, zext_ln34_1_fu_997_p1, zext_ln34_2_fu_1045_p1, zext_ln34_3_fu_1098_p1, zext_ln34_4_fu_1136_p1, zext_ln34_5_fu_1175_p1, zext_ln34_6_fu_1222_p1, zext_ln34_7_fu_1281_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            signal_m2_address0 <= zext_ln34_7_fu_1281_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            signal_m2_address0 <= zext_ln34_6_fu_1222_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            signal_m2_address0 <= zext_ln34_5_fu_1175_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            signal_m2_address0 <= zext_ln34_4_fu_1136_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            signal_m2_address0 <= zext_ln34_3_fu_1098_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            signal_m2_address0 <= zext_ln34_2_fu_1045_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            signal_m2_address0 <= zext_ln34_1_fu_997_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            signal_m2_address0 <= zext_ln34_fu_942_p1(6 - 1 downto 0);
        else 
            signal_m2_address0 <= "XXXXXX";
        end if; 
    end process;


    signal_m2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            signal_m2_ce0 <= ap_const_logic_1;
        else 
            signal_m2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_m2_d0_assign_proc : process(m2_q1, reg_584, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, reg_589, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, m2_load_3_reg_1559, m2_load_5_reg_1591, m2_load_7_reg_1629, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            signal_m2_d0 <= m2_load_7_reg_1629;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            signal_m2_d0 <= m2_load_5_reg_1591;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            signal_m2_d0 <= m2_load_3_reg_1559;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            signal_m2_d0 <= reg_584;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            signal_m2_d0 <= reg_589;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            signal_m2_d0 <= m2_q1;
        else 
            signal_m2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    signal_m2_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, icmp_ln24_reg_1440, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            signal_m2_we0 <= ap_const_logic_1;
        else 
            signal_m2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_mul_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, zext_ln34_reg_1522, zext_ln34_1_reg_1554, zext_ln34_2_reg_1586, zext_ln34_3_reg_1624, zext_ln34_4_reg_1652, zext_ln34_5_reg_1680, zext_ln34_6_reg_1713, zext_ln34_7_reg_1750, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            signal_mul_address0 <= zext_ln34_7_reg_1750(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            signal_mul_address0 <= zext_ln34_6_reg_1713(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            signal_mul_address0 <= zext_ln34_5_reg_1680(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            signal_mul_address0 <= zext_ln34_4_reg_1652(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            signal_mul_address0 <= zext_ln34_3_reg_1624(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            signal_mul_address0 <= zext_ln34_2_reg_1586(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            signal_mul_address0 <= zext_ln34_1_reg_1554(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            signal_mul_address0 <= zext_ln34_reg_1522(6 - 1 downto 0);
        else 
            signal_mul_address0 <= "XXXXXX";
        end if; 
    end process;


    signal_mul_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            signal_mul_ce0 <= ap_const_logic_1;
        else 
            signal_mul_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_mul_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, bitcast_ln34_fu_1191_p1, bitcast_ln34_1_fu_1249_p1, bitcast_ln34_2_fu_1317_p1, bitcast_ln34_3_fu_1340_p1, bitcast_ln34_4_fu_1364_p1, bitcast_ln34_5_fu_1378_p1, bitcast_ln34_6_fu_1392_p1, bitcast_ln34_7_fu_1406_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            signal_mul_d0 <= bitcast_ln34_7_fu_1406_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            signal_mul_d0 <= bitcast_ln34_6_fu_1392_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            signal_mul_d0 <= bitcast_ln34_5_fu_1378_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            signal_mul_d0 <= bitcast_ln34_4_fu_1364_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            signal_mul_d0 <= bitcast_ln34_3_fu_1340_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            signal_mul_d0 <= bitcast_ln34_2_fu_1317_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            signal_mul_d0 <= bitcast_ln34_1_fu_1249_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            signal_mul_d0 <= bitcast_ln34_fu_1191_p1;
        else 
            signal_mul_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    signal_mul_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, icmp_ln24_reg_1440, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, icmp_ln24_reg_1440_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln24_reg_1440_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            signal_mul_we0 <= ap_const_logic_1;
        else 
            signal_mul_we0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_temp_x_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, zext_ln34_fu_942_p1, zext_ln34_1_fu_997_p1, zext_ln34_2_fu_1045_p1, zext_ln34_3_fu_1098_p1, zext_ln34_4_fu_1136_p1, zext_ln34_5_fu_1175_p1, zext_ln34_6_fu_1222_p1, zext_ln34_7_fu_1281_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            signal_temp_x_address0 <= zext_ln34_7_fu_1281_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            signal_temp_x_address0 <= zext_ln34_6_fu_1222_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            signal_temp_x_address0 <= zext_ln34_5_fu_1175_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            signal_temp_x_address0 <= zext_ln34_4_fu_1136_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            signal_temp_x_address0 <= zext_ln34_3_fu_1098_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            signal_temp_x_address0 <= zext_ln34_2_fu_1045_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            signal_temp_x_address0 <= zext_ln34_1_fu_997_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            signal_temp_x_address0 <= zext_ln34_fu_942_p1(6 - 1 downto 0);
        else 
            signal_temp_x_address0 <= "XXXXXX";
        end if; 
    end process;


    signal_temp_x_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            signal_temp_x_ce0 <= ap_const_logic_1;
        else 
            signal_temp_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_temp_x_d0_assign_proc : process(m1_q0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, m1_load_reg_1516, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            signal_temp_x_d0 <= m1_load_reg_1516;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            signal_temp_x_d0 <= m1_q0;
        else 
            signal_temp_x_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    signal_temp_x_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, icmp_ln24_reg_1440, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln24_reg_1440 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            signal_temp_x_we0 <= ap_const_logic_1;
        else 
            signal_temp_x_we0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_x_fu_988_p1 <= m1_load_reg_1516;
    tmp_1_fu_857_p4 <= select_ln25_3_fu_781_p3(5 downto 3);
    tmp_3_fu_617_p3 <= (empty_fu_613_p1 & ap_const_lv6_0);
    trunc_ln25_1_fu_743_p1 <= add_ln25_fu_723_p2(6 - 1 downto 0);
    trunc_ln25_fu_673_p1 <= ap_phi_mux_kk_phi_fu_525_p4(6 - 1 downto 0);
    trunc_ln29_fu_853_p1 <= select_ln26_fu_807_p3(3 - 1 downto 0);
    trunc_ln30_fu_883_p1 <= select_ln26_2_fu_841_p3(6 - 1 downto 0);
    xor_ln24_fu_693_p2 <= (icmp_ln25_fu_637_p2 xor ap_const_lv1_1);
    xor_ln25_fu_763_p2 <= (icmp_ln26_fu_711_p2 xor ap_const_lv1_1);
    zext_ln24_1_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln24_1_fu_651_p2),12));
    zext_ln24_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_jj_phi_fu_503_p4),12));
    zext_ln25_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_1_fu_661_p3),12));
    zext_ln26_1_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln26_2_fu_1142_p2),64));
    zext_ln26_2_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln26_3_fu_1181_p2),64));
    zext_ln26_3_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln26_4_fu_1239_p2),64));
    zext_ln26_4_fu_1312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln26_5_fu_1307_p2),64));
    zext_ln26_5_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln26_6_fu_1330_p2),64));
    zext_ln26_6_fu_1354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln26_7_fu_1349_p2),64));
    zext_ln26_7_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln26_1_reg_1464),64));
    zext_ln26_fu_1109_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln26_1_fu_1104_p2),64));
    zext_ln30_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_1_fu_887_p3),64));
    zext_ln32_1_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln32_fu_911_p2),64));
    zext_ln32_2_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln32_1_fu_968_p2),64));
    zext_ln32_3_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln32_2_fu_978_p2),64));
    zext_ln32_4_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln32_3_fu_1002_p2),64));
    zext_ln32_5_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln32_4_fu_1012_p2),64));
    zext_ln32_6_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln32_5_fu_1051_p2),64));
    zext_ln32_7_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln32_6_fu_1061_p2),64));
    zext_ln32_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln32_fu_900_p2),64));
    zext_ln34_1_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_reg_1527),64));
    zext_ln34_2_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_1_fu_1037_p3),64));
    zext_ln34_3_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_2_fu_1090_p3),64));
    zext_ln34_4_fu_1136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_3_fu_1128_p3),64));
    zext_ln34_5_fu_1175_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_4_fu_1167_p3),64));
    zext_ln34_6_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_5_fu_1214_p3),64));
    zext_ln34_7_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_6_fu_1273_p3),64));
    zext_ln34_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_encore_num_phi_fu_569_p4),64));
end behav;
