// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bbgemm_bbgemm,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.042000,HLS_SYN_LAT=262156,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2693,HLS_SYN_LUT=3100,HLS_VERSION=2020_2}" *)

module bbgemm (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m1_address0,
        m1_ce0,
        m1_q0,
        m2_address0,
        m2_ce0,
        m2_q0,
        m2_address1,
        m2_ce1,
        m2_q1,
        prod_address0,
        prod_ce0,
        prod_q0,
        prod_address1,
        prod_ce1,
        prod_we1,
        prod_d1,
        signal_mul_address0,
        signal_mul_ce0,
        signal_mul_we0,
        signal_mul_d0,
        signal_temp_x_address0,
        signal_temp_x_ce0,
        signal_temp_x_we0,
        signal_temp_x_d0,
        signal_m2_address0,
        signal_m2_ce0,
        signal_m2_we0,
        signal_m2_d0
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_pp0_stage2 = 10'd8;
parameter    ap_ST_fsm_pp0_stage3 = 10'd16;
parameter    ap_ST_fsm_pp0_stage4 = 10'd32;
parameter    ap_ST_fsm_pp0_stage5 = 10'd64;
parameter    ap_ST_fsm_pp0_stage6 = 10'd128;
parameter    ap_ST_fsm_pp0_stage7 = 10'd256;
parameter    ap_ST_fsm_state21 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] m1_address0;
output   m1_ce0;
input  [63:0] m1_q0;
output  [11:0] m2_address0;
output   m2_ce0;
input  [63:0] m2_q0;
output  [11:0] m2_address1;
output   m2_ce1;
input  [63:0] m2_q1;
output  [11:0] prod_address0;
output   prod_ce0;
input  [63:0] prod_q0;
output  [11:0] prod_address1;
output   prod_ce1;
output   prod_we1;
output  [63:0] prod_d1;
output  [5:0] signal_mul_address0;
output   signal_mul_ce0;
output   signal_mul_we0;
output  [63:0] signal_mul_d0;
output  [5:0] signal_temp_x_address0;
output   signal_temp_x_ce0;
output   signal_temp_x_we0;
output  [63:0] signal_temp_x_d0;
output  [5:0] signal_m2_address0;
output   signal_m2_ce0;
output   signal_m2_we0;
output  [63:0] signal_m2_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m1_ce0;
reg[11:0] m2_address0;
reg m2_ce0;
reg[11:0] m2_address1;
reg m2_ce1;
reg[11:0] prod_address0;
reg prod_ce0;
reg[11:0] prod_address1;
reg prod_ce1;
reg prod_we1;
reg[63:0] prod_d1;
reg[5:0] signal_mul_address0;
reg signal_mul_ce0;
reg signal_mul_we0;
reg[63:0] signal_mul_d0;
reg[5:0] signal_temp_x_address0;
reg signal_temp_x_ce0;
reg signal_temp_x_we0;
reg[63:0] signal_temp_x_d0;
reg[5:0] signal_m2_address0;
reg signal_m2_ce0;
reg signal_m2_we0;
reg[63:0] signal_m2_d0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] indvar_flatten126_reg_488;
reg   [6:0] jj_reg_499;
reg   [13:0] indvar_flatten65_reg_510;
reg   [6:0] kk_reg_521;
reg   [10:0] indvar_flatten_reg_532;
reg   [6:0] i_reg_543;
reg   [3:0] k_reg_554;
reg   [31:0] encore_num_reg_565;
reg   [63:0] reg_584;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_state19_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln24_reg_1440;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_state20_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg   [63:0] reg_589;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [63:0] reg_595;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state17_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln24_reg_1440_pp0_iter1_reg;
reg   [63:0] reg_599;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state16_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state18_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [15:0] add_ln24_fu_603_p2;
reg   [15:0] add_ln24_reg_1435;
wire   [0:0] icmp_ln24_fu_631_p2;
reg   [0:0] icmp_ln24_reg_1440_pp0_iter2_reg;
wire   [0:0] icmp_ln25_fu_637_p2;
reg   [0:0] icmp_ln25_reg_1444;
wire   [6:0] select_ln24_1_fu_661_p3;
reg   [6:0] select_ln24_1_reg_1449;
wire   [6:0] select_ln25_3_fu_781_p3;
reg   [6:0] select_ln25_3_reg_1454;
wire   [3:0] select_ln26_fu_807_p3;
reg   [3:0] select_ln26_reg_1459;
wire   [11:0] select_ln26_1_fu_833_p3;
reg   [11:0] select_ln26_1_reg_1464;
reg   [11:0] select_ln26_1_reg_1464_pp0_iter1_reg;
wire   [6:0] select_ln26_2_fu_841_p3;
reg   [6:0] select_ln26_2_reg_1476;
wire   [11:0] add_ln32_fu_900_p2;
reg   [11:0] add_ln32_reg_1486;
wire   [10:0] select_ln26_3_fu_928_p3;
reg   [10:0] select_ln26_3_reg_1506;
wire   [13:0] add_ln25_1_fu_936_p2;
reg   [13:0] add_ln25_1_reg_1511;
reg   [63:0] m1_load_reg_1516;
wire   [63:0] zext_ln34_fu_942_p1;
reg   [63:0] zext_ln34_reg_1522;
wire   [31:0] select_ln37_fu_960_p3;
reg   [31:0] select_ln37_reg_1527;
wire   [63:0] temp_x_fu_988_p1;
reg   [63:0] temp_x_reg_1544;
wire   [63:0] bitcast_ln32_fu_992_p1;
wire   [63:0] zext_ln34_1_fu_997_p1;
reg   [63:0] zext_ln34_1_reg_1554;
reg   [63:0] m2_load_3_reg_1559;
wire   [63:0] bitcast_ln32_1_fu_1022_p1;
wire   [31:0] select_ln37_1_fu_1037_p3;
reg   [31:0] select_ln37_1_reg_1580;
wire   [63:0] zext_ln34_2_fu_1045_p1;
reg   [63:0] zext_ln34_2_reg_1586;
reg   [63:0] m2_load_5_reg_1591;
reg   [11:0] prod_addr_reg_1607;
wire   [63:0] bitcast_ln32_2_fu_1075_p1;
wire   [31:0] select_ln37_2_fu_1090_p3;
reg   [31:0] select_ln37_2_reg_1618;
wire   [63:0] zext_ln34_3_fu_1098_p1;
reg   [63:0] zext_ln34_3_reg_1624;
reg   [63:0] m2_load_7_reg_1629;
reg   [11:0] prod_addr_1_reg_1635;
wire   [63:0] bitcast_ln32_3_fu_1114_p1;
wire   [31:0] select_ln37_3_fu_1128_p3;
reg   [31:0] select_ln37_3_reg_1646;
wire   [63:0] zext_ln34_4_fu_1136_p1;
reg   [63:0] zext_ln34_4_reg_1652;
wire   [63:0] grp_fu_580_p2;
reg   [63:0] mul_reg_1657;
reg   [11:0] prod_addr_2_reg_1663;
wire   [63:0] bitcast_ln32_4_fu_1152_p1;
wire   [31:0] select_ln37_4_fu_1167_p3;
reg   [31:0] select_ln37_4_reg_1674;
wire   [63:0] zext_ln34_5_fu_1175_p1;
reg   [63:0] zext_ln34_5_reg_1680;
wire   [63:0] bitcast_ln45_fu_1195_p1;
reg   [63:0] mul_1_reg_1690;
reg   [11:0] prod_addr_3_reg_1696;
wire   [63:0] bitcast_ln32_5_fu_1200_p1;
wire   [31:0] select_ln37_5_fu_1214_p3;
reg   [31:0] select_ln37_5_reg_1707;
wire   [63:0] zext_ln34_6_fu_1222_p1;
reg   [63:0] zext_ln34_6_reg_1713;
wire   [3:0] add_ln27_fu_1228_p2;
reg   [3:0] add_ln27_reg_1718;
wire   [13:0] select_ln25_4_fu_1233_p3;
reg   [13:0] select_ln25_4_reg_1723;
wire   [63:0] bitcast_ln45_8_fu_1253_p1;
reg   [63:0] mul_2_reg_1733;
reg   [11:0] prod_addr_4_reg_1739;
wire   [63:0] bitcast_ln32_6_fu_1258_p1;
wire   [63:0] zext_ln34_7_fu_1281_p1;
reg   [63:0] zext_ln34_7_reg_1750;
wire   [31:0] select_ln37_7_fu_1299_p3;
reg   [31:0] select_ln37_7_reg_1755;
wire   [63:0] bitcast_ln45_2_fu_1321_p1;
reg   [63:0] mul_3_reg_1765;
reg   [11:0] prod_addr_5_reg_1771;
wire   [63:0] bitcast_ln32_7_fu_1326_p1;
wire   [63:0] bitcast_ln45_3_fu_1344_p1;
reg   [63:0] mul_4_reg_1787;
reg   [11:0] prod_addr_6_reg_1793;
wire   [63:0] bitcast_ln45_4_fu_1368_p1;
reg   [63:0] mul_5_reg_1804;
reg   [11:0] prod_addr_7_reg_1810;
wire   [63:0] bitcast_ln45_5_fu_1382_p1;
reg   [63:0] mul_6_reg_1821;
wire   [63:0] bitcast_ln45_6_fu_1396_p1;
reg   [63:0] mul_7_reg_1832;
wire   [63:0] bitcast_ln45_7_fu_1410_p1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [15:0] ap_phi_mux_indvar_flatten126_phi_fu_492_p4;
wire    ap_block_pp0_stage0;
reg   [6:0] ap_phi_mux_jj_phi_fu_503_p4;
reg   [13:0] ap_phi_mux_indvar_flatten65_phi_fu_514_p4;
reg   [6:0] ap_phi_mux_kk_phi_fu_525_p4;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_536_p4;
reg   [6:0] ap_phi_mux_i_phi_fu_547_p4;
reg   [3:0] ap_phi_mux_k_phi_fu_558_p4;
reg   [31:0] ap_phi_mux_encore_num_phi_fu_569_p4;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln30_fu_895_p1;
wire   [63:0] zext_ln32_fu_906_p1;
wire   [63:0] zext_ln32_1_fu_917_p1;
wire   [63:0] zext_ln32_2_fu_973_p1;
wire   [63:0] zext_ln32_3_fu_983_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln32_4_fu_1007_p1;
wire   [63:0] zext_ln32_5_fu_1017_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln32_6_fu_1056_p1;
wire   [63:0] zext_ln32_7_fu_1066_p1;
wire   [63:0] zext_ln26_7_fu_1071_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln26_fu_1109_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln26_1_fu_1147_p1;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln26_2_fu_1186_p1;
wire   [63:0] zext_ln26_3_fu_1244_p1;
wire   [63:0] zext_ln26_4_fu_1312_p1;
wire   [63:0] zext_ln26_5_fu_1335_p1;
wire   [63:0] zext_ln26_6_fu_1354_p1;
wire   [63:0] bitcast_ln45_1_fu_1359_p1;
wire   [63:0] bitcast_ln45_9_fu_1373_p1;
wire   [63:0] bitcast_ln45_10_fu_1387_p1;
wire   [63:0] bitcast_ln45_11_fu_1401_p1;
wire   [63:0] bitcast_ln45_12_fu_1415_p1;
wire   [63:0] bitcast_ln45_13_fu_1420_p1;
wire   [63:0] bitcast_ln45_14_fu_1425_p1;
wire   [63:0] bitcast_ln45_15_fu_1430_p1;
wire   [63:0] bitcast_ln34_fu_1191_p1;
wire   [63:0] bitcast_ln34_1_fu_1249_p1;
wire   [63:0] bitcast_ln34_2_fu_1317_p1;
wire   [63:0] bitcast_ln34_3_fu_1340_p1;
wire   [63:0] bitcast_ln34_4_fu_1364_p1;
wire   [63:0] bitcast_ln34_5_fu_1378_p1;
wire   [63:0] bitcast_ln34_6_fu_1392_p1;
wire   [63:0] bitcast_ln34_7_fu_1406_p1;
reg   [63:0] grp_fu_576_p0;
reg   [63:0] grp_fu_576_p1;
reg   [63:0] grp_fu_580_p0;
reg   [63:0] grp_fu_580_p1;
wire   [5:0] empty_fu_613_p1;
wire   [11:0] tmp_3_fu_617_p3;
wire   [11:0] zext_ln24_fu_609_p1;
wire   [6:0] add_ln24_1_fu_651_p2;
wire   [5:0] trunc_ln25_fu_673_p1;
wire   [11:0] zext_ln24_1_fu_657_p1;
wire   [11:0] add_ln45_fu_625_p2;
wire   [0:0] icmp_ln27_fu_699_p2;
wire   [0:0] xor_ln24_fu_693_p2;
wire   [0:0] icmp_ln26_fu_711_p2;
wire   [6:0] select_ln24_fu_643_p3;
wire   [0:0] and_ln24_1_fu_717_p2;
wire   [0:0] or_ln25_fu_729_p2;
wire   [6:0] add_ln25_fu_723_p2;
wire   [5:0] trunc_ln25_1_fu_743_p1;
wire   [5:0] select_ln24_2_fu_677_p3;
wire   [11:0] zext_ln25_fu_669_p1;
wire   [11:0] select_ln24_3_fu_685_p3;
wire   [0:0] xor_ln25_fu_763_p2;
wire   [0:0] and_ln24_fu_705_p2;
wire   [0:0] or_ln25_1_fu_769_p2;
wire   [6:0] select_ln25_fu_735_p3;
wire   [0:0] and_ln25_fu_775_p2;
wire   [0:0] or_ln26_fu_795_p2;
wire   [0:0] or_ln26_8_fu_801_p2;
wire   [6:0] add_ln26_fu_789_p2;
wire   [5:0] empty_8_fu_815_p1;
wire   [11:0] p_mid1_fu_819_p3;
wire   [11:0] add_ln45_1_fu_827_p2;
wire   [11:0] select_ln25_2_fu_755_p3;
wire   [2:0] tmp_1_fu_857_p4;
wire   [2:0] trunc_ln29_fu_853_p1;
wire   [5:0] select_ln25_1_fu_747_p3;
wire   [5:0] k_cast6_fu_849_p1;
wire   [5:0] trunc_ln30_fu_883_p1;
wire   [5:0] add_ln30_fu_877_p2;
wire   [11:0] add_ln30_1_fu_887_p3;
wire   [11:0] shl_ln_fu_867_p4;
wire   [11:0] or_ln32_fu_911_p2;
wire   [10:0] add_ln26_1_fu_922_p2;
wire   [0:0] icmp_ln37_fu_948_p2;
wire   [31:0] add_ln38_fu_954_p2;
wire   [11:0] or_ln32_1_fu_968_p2;
wire   [11:0] or_ln32_2_fu_978_p2;
wire   [11:0] or_ln32_3_fu_1002_p2;
wire   [11:0] or_ln32_4_fu_1012_p2;
wire   [0:0] icmp_ln37_1_fu_1027_p2;
wire   [31:0] add_ln38_1_fu_1032_p2;
wire   [11:0] or_ln32_5_fu_1051_p2;
wire   [11:0] or_ln32_6_fu_1061_p2;
wire   [0:0] icmp_ln37_2_fu_1080_p2;
wire   [31:0] add_ln38_2_fu_1085_p2;
wire   [11:0] or_ln26_1_fu_1104_p2;
wire   [0:0] icmp_ln37_3_fu_1118_p2;
wire   [31:0] add_ln38_3_fu_1123_p2;
wire   [11:0] or_ln26_2_fu_1142_p2;
wire   [0:0] icmp_ln37_4_fu_1157_p2;
wire   [31:0] add_ln38_4_fu_1162_p2;
wire   [11:0] or_ln26_3_fu_1181_p2;
wire   [0:0] icmp_ln37_5_fu_1204_p2;
wire   [31:0] add_ln38_5_fu_1209_p2;
wire   [11:0] or_ln26_4_fu_1239_p2;
wire   [0:0] icmp_ln37_6_fu_1263_p2;
wire   [31:0] add_ln38_6_fu_1268_p2;
wire   [31:0] select_ln37_6_fu_1273_p3;
wire   [0:0] icmp_ln37_7_fu_1287_p2;
wire   [31:0] add_ln38_7_fu_1293_p2;
wire   [11:0] or_ln26_5_fu_1307_p2;
wire   [11:0] or_ln26_6_fu_1330_p2;
wire   [11:0] or_ln26_7_fu_1349_p2;
wire   [63:0] grp_fu_576_p2;
wire    ap_CS_fsm_state21;
reg   [9:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

bbgemm_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_576_p0),
    .din1(grp_fu_576_p1),
    .ce(1'b1),
    .dout(grp_fu_576_p2)
);

bbgemm_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_580_p0),
    .din1(grp_fu_580_p1),
    .ce(1'b1),
    .dout(grp_fu_580_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        encore_num_reg_565 <= select_ln37_7_reg_1755;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        encore_num_reg_565 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_543 <= select_ln26_2_reg_1476;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_543 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten126_reg_488 <= add_ln24_reg_1435;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten126_reg_488 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten65_reg_510 <= select_ln25_4_reg_1723;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten65_reg_510 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_532 <= select_ln26_3_reg_1506;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_532 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        jj_reg_499 <= select_ln24_1_reg_1449;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        jj_reg_499 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_reg_554 <= add_ln27_reg_1718;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_reg_554 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kk_reg_521 <= select_ln25_3_reg_1454;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        kk_reg_521 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            reg_589 <= m2_q1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            reg_589 <= m2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln24_reg_1435 <= add_ln24_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_631_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln25_1_reg_1511 <= add_ln25_1_fu_936_p2;
        add_ln32_reg_1486 <= add_ln32_fu_900_p2;
        icmp_ln25_reg_1444 <= icmp_ln25_fu_637_p2;
        select_ln26_1_reg_1464 <= select_ln26_1_fu_833_p3;
        select_ln26_reg_1459 <= select_ln26_fu_807_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        add_ln27_reg_1718 <= add_ln27_fu_1228_p2;
        mul_1_reg_1690 <= grp_fu_580_p2;
        select_ln25_4_reg_1723 <= select_ln25_4_fu_1233_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln24_reg_1440 <= icmp_ln24_fu_631_p2;
        icmp_ln24_reg_1440_pp0_iter1_reg <= icmp_ln24_reg_1440;
        icmp_ln24_reg_1440_pp0_iter2_reg <= icmp_ln24_reg_1440_pp0_iter1_reg;
        select_ln26_1_reg_1464_pp0_iter1_reg <= select_ln26_1_reg_1464;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m1_load_reg_1516 <= m1_q0;
        select_ln37_reg_1527 <= select_ln37_fu_960_p3;
        zext_ln34_reg_1522[31 : 0] <= zext_ln34_fu_942_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        m2_load_3_reg_1559 <= m2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        m2_load_5_reg_1591 <= m2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        m2_load_7_reg_1629 <= m2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_2_reg_1733 <= grp_fu_580_p2;
        select_ln37_7_reg_1755 <= select_ln37_7_fu_1299_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_3_reg_1765 <= grp_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul_4_reg_1787 <= grp_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_5_reg_1804 <= grp_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul_6_reg_1821 <= grp_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        mul_7_reg_1832 <= grp_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        mul_reg_1657 <= grp_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        prod_addr_1_reg_1635[11 : 1] <= zext_ln26_fu_1109_p1[11 : 1];
        select_ln37_3_reg_1646 <= select_ln37_3_fu_1128_p3;
        zext_ln34_4_reg_1652[31 : 0] <= zext_ln34_4_fu_1136_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        prod_addr_2_reg_1663[0] <= zext_ln26_1_fu_1147_p1[0];
prod_addr_2_reg_1663[11 : 2] <= zext_ln26_1_fu_1147_p1[11 : 2];
        select_ln37_4_reg_1674 <= select_ln37_4_fu_1167_p3;
        zext_ln34_5_reg_1680[31 : 0] <= zext_ln34_5_fu_1175_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        prod_addr_3_reg_1696[11 : 2] <= zext_ln26_2_fu_1186_p1[11 : 2];
        select_ln37_5_reg_1707 <= select_ln37_5_fu_1214_p3;
        zext_ln34_6_reg_1713[31 : 0] <= zext_ln34_6_fu_1222_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prod_addr_4_reg_1739[1 : 0] <= zext_ln26_3_fu_1244_p1[1 : 0];
prod_addr_4_reg_1739[11 : 3] <= zext_ln26_3_fu_1244_p1[11 : 3];
        zext_ln34_7_reg_1750[31 : 0] <= zext_ln34_7_fu_1281_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        prod_addr_5_reg_1771[1] <= zext_ln26_4_fu_1312_p1[1];
prod_addr_5_reg_1771[11 : 3] <= zext_ln26_4_fu_1312_p1[11 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        prod_addr_6_reg_1793[0] <= zext_ln26_5_fu_1335_p1[0];
prod_addr_6_reg_1793[11 : 3] <= zext_ln26_5_fu_1335_p1[11 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        prod_addr_7_reg_1810[11 : 3] <= zext_ln26_6_fu_1354_p1[11 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        prod_addr_reg_1607 <= zext_ln26_7_fu_1071_p1;
        select_ln37_2_reg_1618 <= select_ln37_2_fu_1090_p3;
        zext_ln34_3_reg_1624[31 : 0] <= zext_ln34_3_fu_1098_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_584 <= m2_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_595 <= prod_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_599 <= prod_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln24_fu_631_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln24_1_reg_1449 <= select_ln24_1_fu_661_p3;
        select_ln25_3_reg_1454 <= select_ln25_3_fu_781_p3;
        select_ln26_2_reg_1476 <= select_ln26_2_fu_841_p3;
        select_ln26_3_reg_1506 <= select_ln26_3_fu_928_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        select_ln37_1_reg_1580 <= select_ln37_1_fu_1037_p3;
        zext_ln34_2_reg_1586[31 : 0] <= zext_ln34_2_fu_1045_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        temp_x_reg_1544 <= temp_x_fu_988_p1;
        zext_ln34_1_reg_1554[31 : 0] <= zext_ln34_1_fu_997_p1[31 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln24_reg_1440 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_encore_num_phi_fu_569_p4 = select_ln37_7_reg_1755;
    end else begin
        ap_phi_mux_encore_num_phi_fu_569_p4 = encore_num_reg_565;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_547_p4 = select_ln26_2_reg_1476;
    end else begin
        ap_phi_mux_i_phi_fu_547_p4 = i_reg_543;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten126_phi_fu_492_p4 = add_ln24_reg_1435;
    end else begin
        ap_phi_mux_indvar_flatten126_phi_fu_492_p4 = indvar_flatten126_reg_488;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten65_phi_fu_514_p4 = select_ln25_4_reg_1723;
    end else begin
        ap_phi_mux_indvar_flatten65_phi_fu_514_p4 = indvar_flatten65_reg_510;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_536_p4 = select_ln26_3_reg_1506;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_536_p4 = indvar_flatten_reg_532;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_jj_phi_fu_503_p4 = select_ln24_1_reg_1449;
    end else begin
        ap_phi_mux_jj_phi_fu_503_p4 = jj_reg_499;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_k_phi_fu_558_p4 = add_ln27_reg_1718;
    end else begin
        ap_phi_mux_k_phi_fu_558_p4 = k_reg_554;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_kk_phi_fu_525_p4 = select_ln25_3_reg_1454;
    end else begin
        ap_phi_mux_kk_phi_fu_525_p4 = kk_reg_521;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_576_p0 = bitcast_ln45_7_fu_1410_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_576_p0 = bitcast_ln45_6_fu_1396_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_576_p0 = bitcast_ln45_5_fu_1382_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_576_p0 = bitcast_ln45_4_fu_1368_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_576_p0 = bitcast_ln45_3_fu_1344_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_576_p0 = bitcast_ln45_2_fu_1321_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_576_p0 = bitcast_ln45_8_fu_1253_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_576_p0 = bitcast_ln45_fu_1195_p1;
    end else begin
        grp_fu_576_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_576_p1 = mul_7_reg_1832;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_576_p1 = mul_6_reg_1821;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_576_p1 = mul_5_reg_1804;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_576_p1 = mul_4_reg_1787;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_576_p1 = mul_3_reg_1765;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_576_p1 = mul_2_reg_1733;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_576_p1 = mul_1_reg_1690;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_576_p1 = mul_reg_1657;
    end else begin
        grp_fu_576_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_580_p0 = temp_x_reg_1544;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_580_p0 = temp_x_fu_988_p1;
    end else begin
        grp_fu_580_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_580_p1 = bitcast_ln32_7_fu_1326_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_580_p1 = bitcast_ln32_6_fu_1258_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_580_p1 = bitcast_ln32_5_fu_1200_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_580_p1 = bitcast_ln32_4_fu_1152_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_580_p1 = bitcast_ln32_3_fu_1114_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_580_p1 = bitcast_ln32_2_fu_1075_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_580_p1 = bitcast_ln32_1_fu_1022_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_580_p1 = bitcast_ln32_fu_992_p1;
    end else begin
        grp_fu_580_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m1_ce0 = 1'b1;
    end else begin
        m1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            m2_address0 = zext_ln32_7_fu_1066_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            m2_address0 = zext_ln32_5_fu_1017_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            m2_address0 = zext_ln32_3_fu_983_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            m2_address0 = zext_ln32_1_fu_917_p1;
        end else begin
            m2_address0 = 'bx;
        end
    end else begin
        m2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            m2_address1 = zext_ln32_6_fu_1056_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            m2_address1 = zext_ln32_4_fu_1007_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            m2_address1 = zext_ln32_2_fu_973_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            m2_address1 = zext_ln32_fu_906_p1;
        end else begin
            m2_address1 = 'bx;
        end
    end else begin
        m2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        m2_ce0 = 1'b1;
    end else begin
        m2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        m2_ce1 = 1'b1;
    end else begin
        m2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        prod_address0 = zext_ln26_6_fu_1354_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        prod_address0 = zext_ln26_5_fu_1335_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        prod_address0 = zext_ln26_4_fu_1312_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        prod_address0 = zext_ln26_3_fu_1244_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        prod_address0 = zext_ln26_2_fu_1186_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        prod_address0 = zext_ln26_1_fu_1147_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        prod_address0 = zext_ln26_fu_1109_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        prod_address0 = zext_ln26_7_fu_1071_p1;
    end else begin
        prod_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        prod_address1 = prod_addr_7_reg_1810;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        prod_address1 = prod_addr_6_reg_1793;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        prod_address1 = prod_addr_5_reg_1771;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        prod_address1 = prod_addr_4_reg_1739;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        prod_address1 = prod_addr_3_reg_1696;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        prod_address1 = prod_addr_2_reg_1663;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        prod_address1 = prod_addr_1_reg_1635;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        prod_address1 = prod_addr_reg_1607;
    end else begin
        prod_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        prod_ce0 = 1'b1;
    end else begin
        prod_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        prod_ce1 = 1'b1;
    end else begin
        prod_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        prod_d1 = bitcast_ln45_15_fu_1430_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        prod_d1 = bitcast_ln45_14_fu_1425_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        prod_d1 = bitcast_ln45_13_fu_1420_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        prod_d1 = bitcast_ln45_12_fu_1415_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        prod_d1 = bitcast_ln45_11_fu_1401_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        prod_d1 = bitcast_ln45_10_fu_1387_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        prod_d1 = bitcast_ln45_9_fu_1373_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        prod_d1 = bitcast_ln45_1_fu_1359_p1;
    end else begin
        prod_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln24_reg_1440_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln24_reg_1440_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        prod_we1 = 1'b1;
    end else begin
        prod_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        signal_m2_address0 = zext_ln34_7_fu_1281_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        signal_m2_address0 = zext_ln34_6_fu_1222_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        signal_m2_address0 = zext_ln34_5_fu_1175_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        signal_m2_address0 = zext_ln34_4_fu_1136_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        signal_m2_address0 = zext_ln34_3_fu_1098_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        signal_m2_address0 = zext_ln34_2_fu_1045_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        signal_m2_address0 = zext_ln34_1_fu_997_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        signal_m2_address0 = zext_ln34_fu_942_p1;
    end else begin
        signal_m2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        signal_m2_ce0 = 1'b1;
    end else begin
        signal_m2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        signal_m2_d0 = m2_load_7_reg_1629;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        signal_m2_d0 = m2_load_5_reg_1591;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        signal_m2_d0 = m2_load_3_reg_1559;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        signal_m2_d0 = reg_584;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        signal_m2_d0 = reg_589;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        signal_m2_d0 = m2_q1;
    end else begin
        signal_m2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        signal_m2_we0 = 1'b1;
    end else begin
        signal_m2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        signal_mul_address0 = zext_ln34_7_reg_1750;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        signal_mul_address0 = zext_ln34_6_reg_1713;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        signal_mul_address0 = zext_ln34_5_reg_1680;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        signal_mul_address0 = zext_ln34_4_reg_1652;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        signal_mul_address0 = zext_ln34_3_reg_1624;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        signal_mul_address0 = zext_ln34_2_reg_1586;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        signal_mul_address0 = zext_ln34_1_reg_1554;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        signal_mul_address0 = zext_ln34_reg_1522;
    end else begin
        signal_mul_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        signal_mul_ce0 = 1'b1;
    end else begin
        signal_mul_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6))) begin
        signal_mul_d0 = bitcast_ln34_7_fu_1406_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        signal_mul_d0 = bitcast_ln34_6_fu_1392_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        signal_mul_d0 = bitcast_ln34_5_fu_1378_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        signal_mul_d0 = bitcast_ln34_4_fu_1364_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        signal_mul_d0 = bitcast_ln34_3_fu_1340_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        signal_mul_d0 = bitcast_ln34_2_fu_1317_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        signal_mul_d0 = bitcast_ln34_1_fu_1249_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        signal_mul_d0 = bitcast_ln34_fu_1191_p1;
    end else begin
        signal_mul_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_1440_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        signal_mul_we0 = 1'b1;
    end else begin
        signal_mul_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        signal_temp_x_address0 = zext_ln34_7_fu_1281_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        signal_temp_x_address0 = zext_ln34_6_fu_1222_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        signal_temp_x_address0 = zext_ln34_5_fu_1175_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        signal_temp_x_address0 = zext_ln34_4_fu_1136_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        signal_temp_x_address0 = zext_ln34_3_fu_1098_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        signal_temp_x_address0 = zext_ln34_2_fu_1045_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        signal_temp_x_address0 = zext_ln34_1_fu_997_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        signal_temp_x_address0 = zext_ln34_fu_942_p1;
    end else begin
        signal_temp_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        signal_temp_x_ce0 = 1'b1;
    end else begin
        signal_temp_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        signal_temp_x_d0 = m1_load_reg_1516;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        signal_temp_x_d0 = m1_q0;
    end else begin
        signal_temp_x_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln24_reg_1440 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        signal_temp_x_we0 = 1'b1;
    end else begin
        signal_temp_x_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln24_reg_1440 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln24_reg_1440 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln24_1_fu_651_p2 = (ap_phi_mux_jj_phi_fu_503_p4 + 7'd8);

assign add_ln24_fu_603_p2 = (ap_phi_mux_indvar_flatten126_phi_fu_492_p4 + 16'd1);

assign add_ln25_1_fu_936_p2 = (ap_phi_mux_indvar_flatten65_phi_fu_514_p4 + 14'd1);

assign add_ln25_fu_723_p2 = (select_ln24_fu_643_p3 + 7'd8);

assign add_ln26_1_fu_922_p2 = (ap_phi_mux_indvar_flatten_phi_fu_536_p4 + 11'd1);

assign add_ln26_fu_789_p2 = (select_ln25_fu_735_p3 + 7'd1);

assign add_ln27_fu_1228_p2 = (select_ln26_reg_1459 + 4'd1);

assign add_ln30_1_fu_887_p3 = {{trunc_ln30_fu_883_p1}, {add_ln30_fu_877_p2}};

assign add_ln30_fu_877_p2 = (select_ln25_1_fu_747_p3 + k_cast6_fu_849_p1);

assign add_ln32_fu_900_p2 = (shl_ln_fu_867_p4 + zext_ln25_fu_669_p1);

assign add_ln38_1_fu_1032_p2 = (select_ln37_reg_1527 + 32'd1);

assign add_ln38_2_fu_1085_p2 = (select_ln37_1_reg_1580 + 32'd1);

assign add_ln38_3_fu_1123_p2 = (select_ln37_2_reg_1618 + 32'd1);

assign add_ln38_4_fu_1162_p2 = (select_ln37_3_reg_1646 + 32'd1);

assign add_ln38_5_fu_1209_p2 = (select_ln37_4_reg_1674 + 32'd1);

assign add_ln38_6_fu_1268_p2 = (select_ln37_5_reg_1707 + 32'd1);

assign add_ln38_7_fu_1293_p2 = (select_ln37_6_fu_1273_p3 + 32'd1);

assign add_ln38_fu_954_p2 = (ap_phi_mux_encore_num_phi_fu_569_p4 + 32'd1);

assign add_ln45_1_fu_827_p2 = (p_mid1_fu_819_p3 + zext_ln25_fu_669_p1);

assign add_ln45_fu_625_p2 = (tmp_3_fu_617_p3 + zext_ln24_fu_609_p1);

assign and_ln24_1_fu_717_p2 = (xor_ln24_fu_693_p2 & icmp_ln26_fu_711_p2);

assign and_ln24_fu_705_p2 = (xor_ln24_fu_693_p2 & icmp_ln27_fu_699_p2);

assign and_ln25_fu_775_p2 = (or_ln25_1_fu_769_p2 & and_ln24_fu_705_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln32_1_fu_1022_p1 = reg_589;

assign bitcast_ln32_2_fu_1075_p1 = reg_584;

assign bitcast_ln32_3_fu_1114_p1 = m2_load_3_reg_1559;

assign bitcast_ln32_4_fu_1152_p1 = reg_589;

assign bitcast_ln32_5_fu_1200_p1 = m2_load_5_reg_1591;

assign bitcast_ln32_6_fu_1258_p1 = reg_584;

assign bitcast_ln32_7_fu_1326_p1 = m2_load_7_reg_1629;

assign bitcast_ln32_fu_992_p1 = reg_584;

assign bitcast_ln34_1_fu_1249_p1 = mul_1_reg_1690;

assign bitcast_ln34_2_fu_1317_p1 = mul_2_reg_1733;

assign bitcast_ln34_3_fu_1340_p1 = mul_3_reg_1765;

assign bitcast_ln34_4_fu_1364_p1 = mul_4_reg_1787;

assign bitcast_ln34_5_fu_1378_p1 = mul_5_reg_1804;

assign bitcast_ln34_6_fu_1392_p1 = mul_6_reg_1821;

assign bitcast_ln34_7_fu_1406_p1 = mul_7_reg_1832;

assign bitcast_ln34_fu_1191_p1 = mul_reg_1657;

assign bitcast_ln45_10_fu_1387_p1 = grp_fu_576_p2;

assign bitcast_ln45_11_fu_1401_p1 = grp_fu_576_p2;

assign bitcast_ln45_12_fu_1415_p1 = grp_fu_576_p2;

assign bitcast_ln45_13_fu_1420_p1 = grp_fu_576_p2;

assign bitcast_ln45_14_fu_1425_p1 = grp_fu_576_p2;

assign bitcast_ln45_15_fu_1430_p1 = grp_fu_576_p2;

assign bitcast_ln45_1_fu_1359_p1 = grp_fu_576_p2;

assign bitcast_ln45_2_fu_1321_p1 = reg_595;

assign bitcast_ln45_3_fu_1344_p1 = reg_599;

assign bitcast_ln45_4_fu_1368_p1 = reg_595;

assign bitcast_ln45_5_fu_1382_p1 = reg_599;

assign bitcast_ln45_6_fu_1396_p1 = reg_595;

assign bitcast_ln45_7_fu_1410_p1 = reg_599;

assign bitcast_ln45_8_fu_1253_p1 = reg_599;

assign bitcast_ln45_9_fu_1373_p1 = grp_fu_576_p2;

assign bitcast_ln45_fu_1195_p1 = reg_595;

assign empty_8_fu_815_p1 = add_ln26_fu_789_p2[5:0];

assign empty_fu_613_p1 = ap_phi_mux_i_phi_fu_547_p4[5:0];

assign icmp_ln24_fu_631_p2 = ((ap_phi_mux_indvar_flatten126_phi_fu_492_p4 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_637_p2 = ((ap_phi_mux_indvar_flatten65_phi_fu_514_p4 == 14'd4096) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_711_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_536_p4 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_699_p2 = ((ap_phi_mux_k_phi_fu_558_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln37_1_fu_1027_p2 = (($signed(select_ln37_reg_1527) < $signed(32'd63)) ? 1'b1 : 1'b0);

assign icmp_ln37_2_fu_1080_p2 = (($signed(select_ln37_1_reg_1580) < $signed(32'd63)) ? 1'b1 : 1'b0);

assign icmp_ln37_3_fu_1118_p2 = (($signed(select_ln37_2_reg_1618) < $signed(32'd63)) ? 1'b1 : 1'b0);

assign icmp_ln37_4_fu_1157_p2 = (($signed(select_ln37_3_reg_1646) < $signed(32'd63)) ? 1'b1 : 1'b0);

assign icmp_ln37_5_fu_1204_p2 = (($signed(select_ln37_4_reg_1674) < $signed(32'd63)) ? 1'b1 : 1'b0);

assign icmp_ln37_6_fu_1263_p2 = (($signed(select_ln37_5_reg_1707) < $signed(32'd63)) ? 1'b1 : 1'b0);

assign icmp_ln37_7_fu_1287_p2 = (($signed(select_ln37_6_fu_1273_p3) < $signed(32'd63)) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_948_p2 = (($signed(ap_phi_mux_encore_num_phi_fu_569_p4) < $signed(32'd63)) ? 1'b1 : 1'b0);

assign k_cast6_fu_849_p1 = select_ln26_fu_807_p3;

assign m1_address0 = zext_ln30_fu_895_p1;

assign or_ln25_1_fu_769_p2 = (xor_ln25_fu_763_p2 | icmp_ln25_fu_637_p2);

assign or_ln25_fu_729_p2 = (icmp_ln25_fu_637_p2 | and_ln24_1_fu_717_p2);

assign or_ln26_1_fu_1104_p2 = (select_ln26_1_reg_1464 | 12'd1);

assign or_ln26_2_fu_1142_p2 = (select_ln26_1_reg_1464 | 12'd2);

assign or_ln26_3_fu_1181_p2 = (select_ln26_1_reg_1464 | 12'd3);

assign or_ln26_4_fu_1239_p2 = (select_ln26_1_reg_1464 | 12'd4);

assign or_ln26_5_fu_1307_p2 = (select_ln26_1_reg_1464_pp0_iter1_reg | 12'd5);

assign or_ln26_6_fu_1330_p2 = (select_ln26_1_reg_1464_pp0_iter1_reg | 12'd6);

assign or_ln26_7_fu_1349_p2 = (select_ln26_1_reg_1464_pp0_iter1_reg | 12'd7);

assign or_ln26_8_fu_801_p2 = (or_ln26_fu_795_p2 | icmp_ln25_fu_637_p2);

assign or_ln26_fu_795_p2 = (and_ln25_fu_775_p2 | and_ln24_1_fu_717_p2);

assign or_ln32_1_fu_968_p2 = (12'd2 | add_ln32_reg_1486);

assign or_ln32_2_fu_978_p2 = (12'd3 | add_ln32_reg_1486);

assign or_ln32_3_fu_1002_p2 = (12'd4 | add_ln32_reg_1486);

assign or_ln32_4_fu_1012_p2 = (12'd5 | add_ln32_reg_1486);

assign or_ln32_5_fu_1051_p2 = (12'd6 | add_ln32_reg_1486);

assign or_ln32_6_fu_1061_p2 = (12'd7 | add_ln32_reg_1486);

assign or_ln32_fu_911_p2 = (12'd1 | add_ln32_fu_900_p2);

assign p_mid1_fu_819_p3 = {{empty_8_fu_815_p1}, {6'd0}};

assign select_ln24_1_fu_661_p3 = ((icmp_ln25_fu_637_p2[0:0] == 1'b1) ? add_ln24_1_fu_651_p2 : ap_phi_mux_jj_phi_fu_503_p4);

assign select_ln24_2_fu_677_p3 = ((icmp_ln25_fu_637_p2[0:0] == 1'b1) ? 6'd0 : trunc_ln25_fu_673_p1);

assign select_ln24_3_fu_685_p3 = ((icmp_ln25_fu_637_p2[0:0] == 1'b1) ? zext_ln24_1_fu_657_p1 : add_ln45_fu_625_p2);

assign select_ln24_fu_643_p3 = ((icmp_ln25_fu_637_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_kk_phi_fu_525_p4);

assign select_ln25_1_fu_747_p3 = ((and_ln24_1_fu_717_p2[0:0] == 1'b1) ? trunc_ln25_1_fu_743_p1 : select_ln24_2_fu_677_p3);

assign select_ln25_2_fu_755_p3 = ((and_ln24_1_fu_717_p2[0:0] == 1'b1) ? zext_ln25_fu_669_p1 : select_ln24_3_fu_685_p3);

assign select_ln25_3_fu_781_p3 = ((and_ln24_1_fu_717_p2[0:0] == 1'b1) ? add_ln25_fu_723_p2 : select_ln24_fu_643_p3);

assign select_ln25_4_fu_1233_p3 = ((icmp_ln25_reg_1444[0:0] == 1'b1) ? 14'd1 : add_ln25_1_reg_1511);

assign select_ln25_fu_735_p3 = ((or_ln25_fu_729_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_i_phi_fu_547_p4);

assign select_ln26_1_fu_833_p3 = ((and_ln25_fu_775_p2[0:0] == 1'b1) ? add_ln45_1_fu_827_p2 : select_ln25_2_fu_755_p3);

assign select_ln26_2_fu_841_p3 = ((and_ln25_fu_775_p2[0:0] == 1'b1) ? add_ln26_fu_789_p2 : select_ln25_fu_735_p3);

assign select_ln26_3_fu_928_p3 = ((or_ln25_fu_729_p2[0:0] == 1'b1) ? 11'd1 : add_ln26_1_fu_922_p2);

assign select_ln26_fu_807_p3 = ((or_ln26_8_fu_801_p2[0:0] == 1'b1) ? 4'd0 : ap_phi_mux_k_phi_fu_558_p4);

assign select_ln37_1_fu_1037_p3 = ((icmp_ln37_1_fu_1027_p2[0:0] == 1'b1) ? add_ln38_1_fu_1032_p2 : 32'd0);

assign select_ln37_2_fu_1090_p3 = ((icmp_ln37_2_fu_1080_p2[0:0] == 1'b1) ? add_ln38_2_fu_1085_p2 : 32'd0);

assign select_ln37_3_fu_1128_p3 = ((icmp_ln37_3_fu_1118_p2[0:0] == 1'b1) ? add_ln38_3_fu_1123_p2 : 32'd0);

assign select_ln37_4_fu_1167_p3 = ((icmp_ln37_4_fu_1157_p2[0:0] == 1'b1) ? add_ln38_4_fu_1162_p2 : 32'd0);

assign select_ln37_5_fu_1214_p3 = ((icmp_ln37_5_fu_1204_p2[0:0] == 1'b1) ? add_ln38_5_fu_1209_p2 : 32'd0);

assign select_ln37_6_fu_1273_p3 = ((icmp_ln37_6_fu_1263_p2[0:0] == 1'b1) ? add_ln38_6_fu_1268_p2 : 32'd0);

assign select_ln37_7_fu_1299_p3 = ((icmp_ln37_7_fu_1287_p2[0:0] == 1'b1) ? add_ln38_7_fu_1293_p2 : 32'd0);

assign select_ln37_fu_960_p3 = ((icmp_ln37_fu_948_p2[0:0] == 1'b1) ? add_ln38_fu_954_p2 : 32'd0);

assign shl_ln_fu_867_p4 = {{{tmp_1_fu_857_p4}, {trunc_ln29_fu_853_p1}}, {6'd0}};

assign temp_x_fu_988_p1 = m1_load_reg_1516;

assign tmp_1_fu_857_p4 = {{select_ln25_3_fu_781_p3[5:3]}};

assign tmp_3_fu_617_p3 = {{empty_fu_613_p1}, {6'd0}};

assign trunc_ln25_1_fu_743_p1 = add_ln25_fu_723_p2[5:0];

assign trunc_ln25_fu_673_p1 = ap_phi_mux_kk_phi_fu_525_p4[5:0];

assign trunc_ln29_fu_853_p1 = select_ln26_fu_807_p3[2:0];

assign trunc_ln30_fu_883_p1 = select_ln26_2_fu_841_p3[5:0];

assign xor_ln24_fu_693_p2 = (icmp_ln25_fu_637_p2 ^ 1'd1);

assign xor_ln25_fu_763_p2 = (icmp_ln26_fu_711_p2 ^ 1'd1);

assign zext_ln24_1_fu_657_p1 = add_ln24_1_fu_651_p2;

assign zext_ln24_fu_609_p1 = ap_phi_mux_jj_phi_fu_503_p4;

assign zext_ln25_fu_669_p1 = select_ln24_1_fu_661_p3;

assign zext_ln26_1_fu_1147_p1 = or_ln26_2_fu_1142_p2;

assign zext_ln26_2_fu_1186_p1 = or_ln26_3_fu_1181_p2;

assign zext_ln26_3_fu_1244_p1 = or_ln26_4_fu_1239_p2;

assign zext_ln26_4_fu_1312_p1 = or_ln26_5_fu_1307_p2;

assign zext_ln26_5_fu_1335_p1 = or_ln26_6_fu_1330_p2;

assign zext_ln26_6_fu_1354_p1 = or_ln26_7_fu_1349_p2;

assign zext_ln26_7_fu_1071_p1 = select_ln26_1_reg_1464;

assign zext_ln26_fu_1109_p1 = or_ln26_1_fu_1104_p2;

assign zext_ln30_fu_895_p1 = add_ln30_1_fu_887_p3;

assign zext_ln32_1_fu_917_p1 = or_ln32_fu_911_p2;

assign zext_ln32_2_fu_973_p1 = or_ln32_1_fu_968_p2;

assign zext_ln32_3_fu_983_p1 = or_ln32_2_fu_978_p2;

assign zext_ln32_4_fu_1007_p1 = or_ln32_3_fu_1002_p2;

assign zext_ln32_5_fu_1017_p1 = or_ln32_4_fu_1012_p2;

assign zext_ln32_6_fu_1056_p1 = or_ln32_5_fu_1051_p2;

assign zext_ln32_7_fu_1066_p1 = or_ln32_6_fu_1061_p2;

assign zext_ln32_fu_906_p1 = add_ln32_fu_900_p2;

assign zext_ln34_1_fu_997_p1 = select_ln37_reg_1527;

assign zext_ln34_2_fu_1045_p1 = select_ln37_1_fu_1037_p3;

assign zext_ln34_3_fu_1098_p1 = select_ln37_2_fu_1090_p3;

assign zext_ln34_4_fu_1136_p1 = select_ln37_3_fu_1128_p3;

assign zext_ln34_5_fu_1175_p1 = select_ln37_4_fu_1167_p3;

assign zext_ln34_6_fu_1222_p1 = select_ln37_5_fu_1214_p3;

assign zext_ln34_7_fu_1281_p1 = select_ln37_6_fu_1273_p3;

assign zext_ln34_fu_942_p1 = ap_phi_mux_encore_num_phi_fu_569_p4;

always @ (posedge ap_clk) begin
    zext_ln34_reg_1522[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln34_1_reg_1554[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln34_2_reg_1586[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln34_3_reg_1624[63:32] <= 32'b00000000000000000000000000000000;
    prod_addr_1_reg_1635[0] <= 1'b1;
    zext_ln34_4_reg_1652[63:32] <= 32'b00000000000000000000000000000000;
    prod_addr_2_reg_1663[1] <= 1'b1;
    zext_ln34_5_reg_1680[63:32] <= 32'b00000000000000000000000000000000;
    prod_addr_3_reg_1696[1:0] <= 2'b11;
    zext_ln34_6_reg_1713[63:32] <= 32'b00000000000000000000000000000000;
    prod_addr_4_reg_1739[2] <= 1'b1;
    zext_ln34_7_reg_1750[63:32] <= 32'b00000000000000000000000000000000;
    prod_addr_5_reg_1771[0] <= 1'b1;
    prod_addr_5_reg_1771[2] <= 1'b1;
    prod_addr_6_reg_1793[2:1] <= 2'b11;
    prod_addr_7_reg_1810[2:0] <= 3'b111;
end

endmodule //bbgemm
